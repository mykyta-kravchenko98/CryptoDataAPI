// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.23.3
// source: api/cryptodata_v1/cryptodata.proto

package cryptodata_v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetCryptoCoinsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetCryptoCoinsRequest) Reset() {
	*x = GetCryptoCoinsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_cryptodata_v1_cryptodata_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCryptoCoinsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCryptoCoinsRequest) ProtoMessage() {}

func (x *GetCryptoCoinsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_cryptodata_v1_cryptodata_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCryptoCoinsRequest.ProtoReflect.Descriptor instead.
func (*GetCryptoCoinsRequest) Descriptor() ([]byte, []int) {
	return file_api_cryptodata_v1_cryptodata_proto_rawDescGZIP(), []int{0}
}

type GetCryptoCoinsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coins []*Coin `protobuf:"bytes,1,rep,name=Coins,proto3" json:"Coins,omitempty"`
	Count int32   `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetCryptoCoinsResponse) Reset() {
	*x = GetCryptoCoinsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_cryptodata_v1_cryptodata_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCryptoCoinsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCryptoCoinsResponse) ProtoMessage() {}

func (x *GetCryptoCoinsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_cryptodata_v1_cryptodata_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCryptoCoinsResponse.ProtoReflect.Descriptor instead.
func (*GetCryptoCoinsResponse) Descriptor() ([]byte, []int) {
	return file_api_cryptodata_v1_cryptodata_proto_rawDescGZIP(), []int{1}
}

func (x *GetCryptoCoinsResponse) GetCoins() []*Coin {
	if x != nil {
		return x.Coins
	}
	return nil
}

func (x *GetCryptoCoinsResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type Coin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name             string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Symbol           string  `protobuf:"bytes,3,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Rank             uint32  `protobuf:"varint,4,opt,name=rank,proto3" json:"rank,omitempty"`
	Price            float64 `protobuf:"fixed64,5,opt,name=price,proto3" json:"price,omitempty"`
	Volume24H        float64 `protobuf:"fixed64,6,opt,name=volume24h,proto3" json:"volume24h,omitempty"`
	VolumeChange24H  float64 `protobuf:"fixed64,7,opt,name=volume_change24h,json=volumeChange24h,proto3" json:"volume_change24h,omitempty"`
	PercentChange1H  float64 `protobuf:"fixed64,8,opt,name=percent_change1h,json=percentChange1h,proto3" json:"percent_change1h,omitempty"`
	PercentChange24H float64 `protobuf:"fixed64,9,opt,name=percent_change24h,json=percentChange24h,proto3" json:"percent_change24h,omitempty"`
	PercentChange7D  float64 `protobuf:"fixed64,10,opt,name=percent_change7d,json=percentChange7d,proto3" json:"percent_change7d,omitempty"`
	MarketCap        float64 `protobuf:"fixed64,11,opt,name=market_cap,json=marketCap,proto3" json:"market_cap,omitempty"`
}

func (x *Coin) Reset() {
	*x = Coin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_cryptodata_v1_cryptodata_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Coin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Coin) ProtoMessage() {}

func (x *Coin) ProtoReflect() protoreflect.Message {
	mi := &file_api_cryptodata_v1_cryptodata_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Coin.ProtoReflect.Descriptor instead.
func (*Coin) Descriptor() ([]byte, []int) {
	return file_api_cryptodata_v1_cryptodata_proto_rawDescGZIP(), []int{2}
}

func (x *Coin) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Coin) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Coin) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Coin) GetRank() uint32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *Coin) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Coin) GetVolume24H() float64 {
	if x != nil {
		return x.Volume24H
	}
	return 0
}

func (x *Coin) GetVolumeChange24H() float64 {
	if x != nil {
		return x.VolumeChange24H
	}
	return 0
}

func (x *Coin) GetPercentChange1H() float64 {
	if x != nil {
		return x.PercentChange1H
	}
	return 0
}

func (x *Coin) GetPercentChange24H() float64 {
	if x != nil {
		return x.PercentChange24H
	}
	return 0
}

func (x *Coin) GetPercentChange7D() float64 {
	if x != nil {
		return x.PercentChange7D
	}
	return 0
}

func (x *Coin) GetMarketCap() float64 {
	if x != nil {
		return x.MarketCap
	}
	return 0
}

var File_api_cryptodata_v1_cryptodata_proto protoreflect.FileDescriptor

var file_api_cryptodata_v1_cryptodata_proto_rawDesc = []byte{
	0x0a, 0x22, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x76, 0x31, 0x22, 0x17, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f,
	0x43, 0x6f, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x59, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x05, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x05, 0x43, 0x6f, 0x69, 0x6e,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xd7, 0x02, 0x0a, 0x04, 0x43, 0x6f, 0x69, 0x6e,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04,
	0x72, 0x61, 0x6e, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x32, 0x34, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x76, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x32, 0x34, 0x68, 0x12, 0x29, 0x0a, 0x10, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x32, 0x34, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f,
	0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x32, 0x34, 0x68, 0x12,
	0x29, 0x0a, 0x10, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x31, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x70, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x31, 0x68, 0x12, 0x2b, 0x0a, 0x11, 0x70, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x32, 0x34, 0x68, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x32, 0x34, 0x68, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x37, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x37, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f, 0x63, 0x61, 0x70,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x43, 0x61,
	0x70, 0x32, 0x73, 0x0a, 0x11, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5e, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70,
	0x35, 0x30, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x12, 0x24, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x72, 0x79, 0x70, 0x74,
	0x6f, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x42, 0x4e, 0x5a, 0x4c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x79, 0x6b, 0x79, 0x74, 0x61, 0x2d, 0x6b, 0x72, 0x61, 0x76,
	0x63, 0x68, 0x65, 0x6e, 0x6b, 0x6f, 0x39, 0x38, 0x2f, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x44,
	0x61, 0x74, 0x61, 0x41, 0x50, 0x49, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x6f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x76, 0x31, 0x3b, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_cryptodata_v1_cryptodata_proto_rawDescOnce sync.Once
	file_api_cryptodata_v1_cryptodata_proto_rawDescData = file_api_cryptodata_v1_cryptodata_proto_rawDesc
)

func file_api_cryptodata_v1_cryptodata_proto_rawDescGZIP() []byte {
	file_api_cryptodata_v1_cryptodata_proto_rawDescOnce.Do(func() {
		file_api_cryptodata_v1_cryptodata_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_cryptodata_v1_cryptodata_proto_rawDescData)
	})
	return file_api_cryptodata_v1_cryptodata_proto_rawDescData
}

var file_api_cryptodata_v1_cryptodata_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_api_cryptodata_v1_cryptodata_proto_goTypes = []interface{}{
	(*GetCryptoCoinsRequest)(nil),  // 0: cryptodata_v1.GetCryptoCoinsRequest
	(*GetCryptoCoinsResponse)(nil), // 1: cryptodata_v1.GetCryptoCoinsResponse
	(*Coin)(nil),                   // 2: cryptodata_v1.Coin
}
var file_api_cryptodata_v1_cryptodata_proto_depIdxs = []int32{
	2, // 0: cryptodata_v1.GetCryptoCoinsResponse.Coins:type_name -> cryptodata_v1.Coin
	0, // 1: cryptodata_v1.CryptoDataService.GetTop50Coins:input_type -> cryptodata_v1.GetCryptoCoinsRequest
	1, // 2: cryptodata_v1.CryptoDataService.GetTop50Coins:output_type -> cryptodata_v1.GetCryptoCoinsResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_api_cryptodata_v1_cryptodata_proto_init() }
func file_api_cryptodata_v1_cryptodata_proto_init() {
	if File_api_cryptodata_v1_cryptodata_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_cryptodata_v1_cryptodata_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCryptoCoinsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_cryptodata_v1_cryptodata_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCryptoCoinsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_cryptodata_v1_cryptodata_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Coin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_cryptodata_v1_cryptodata_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_cryptodata_v1_cryptodata_proto_goTypes,
		DependencyIndexes: file_api_cryptodata_v1_cryptodata_proto_depIdxs,
		MessageInfos:      file_api_cryptodata_v1_cryptodata_proto_msgTypes,
	}.Build()
	File_api_cryptodata_v1_cryptodata_proto = out.File
	file_api_cryptodata_v1_cryptodata_proto_rawDesc = nil
	file_api_cryptodata_v1_cryptodata_proto_goTypes = nil
	file_api_cryptodata_v1_cryptodata_proto_depIdxs = nil
}
